LJFriend.h:

/*!
 @const LJFriendAddedNotification
 @discussion
 Posted when a user is added to an account's friends list.
 The notification object is the LJFriend instance being added.
*/
FOUNDATION_EXPORT NSString * const LJFriendAddedNotification;

/*!
 @const LJFriendRemovedNotification
 @discussion
 Posted when a user is removed from an account's friends list.
 The notification object is the LJFriend instance being removed.
 */
FOUNDATION_EXPORT NSString * const LJFriendRemovedNotification;

/*!
 @const LJFriendOfAddedNotification
 @discussion
 Posted when an account is added to another user's friend list.
 The notification object is the LJFriend instance which added
 this account as a friend.
 */
FOUNDATION_EXPORT NSString * const LJFriendOfAddedNotification;

/*!
 @const LJFriendOfRemovedNotification
 @discussion
 Posted when an account is removed from another user's friend list.
 The notification object is the LJFriend instance which "unfriended"
 this account.
 */
FOUNDATION_EXPORT NSString * const LJFriendOfRemovedNotification;

/*!
 @const LJFriendChangedNotification
 @discussion
 Posted when the properties of an LJFriend object have changed.
 The notification object is the LJFriend instance which changed.
 If a friend is added or removed but its properties have not changed this
 notification will not be posted.
 */
FOUNDATION_EXPORT NSString * const LJFriendChangedNotification;

LJFriend.m

NSString * const LJFriendAddedNotification = @"LJFriendAdded";
NSString * const LJFriendRemovedNotification = @"LJFriendRemoved";
NSString * const LJFriendOfAddedNotification = @"LJFriendOfAdded";
NSString * const LJFriendOfRemovedNotification = @"LJFriendOfRemoved";
NSString * const LJFriendChangedNotification = @"LJFriendChanged";

static NSNotificationQueue *notificationQueue = nil;

+ (void)initialize
{
    if (notificationQueue == nil) {
        notificationQueue = [NSNotificationQueue defaultQueue];
    }
}

- (void)_enqueueNotificationName:(NSString *)name
{
    //NSNotificationQueue *queue;
    NSNotification *notice;

#ifdef DEBUG
    NSLog(@"enqueueing %@ for %@", name, _username);
#endif
    //queue = [NSNotificationQueue defaultQueue];
    notice = [NSNotification notificationWithName:name object:self];
    [notificationQueue enqueueNotification:notice postingStyle:NSPostASAP];
}

